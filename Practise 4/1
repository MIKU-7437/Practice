#include <iostream>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <string>
#include <vector>

using namespace std;

inline bool IsSimple(unsigned long);
int Generator();
int Encrypt(string, int, int);

int main()
{
    int p, q, fi, mod;
    p = Generator();
    q = p;
    do {
        p = Generator();
    } while (q == p);

    mod = p * q;
    fi = (p - 1) * (q - 1);

    int e = 2, d = 2;
    for (e;; e++) {
        if (IsSimple(e) && e < fi && (fi % e != 0))
            break;
    }
    for (d;; d++) {
        if ((e * d) % fi == 1)
            break;
    }

    cout << "Enter your text: " << endl;
    string text;
    cin >> text;
    Encrypt(text, e, mod);

    return 0;
}

inline bool IsSimple(unsigned long n)
{
    if (n < 2)
        return false;
    for (unsigned long j = 2; j * j <= n; ++j)
        if (n % j == 0)
            return false;
    return true;
}

int Generator()
{
    srand(time(NULL));
    int a;
    unsigned int b = -1;
    for (unsigned long i = 1; i <= 100000; i++)
    {
        a = 2 + rand() % b;
        if (IsSimple(a))
            return a;
    }
    return -1; // Return -1 if no prime number is found
}

int Encrypt(string text, int e, int mod)
{
    vector<int> a;
    for (int i = 0; i < text.size(); i++) {
        a.push_back(text[i]);
    }
    for (int i = 0; i < a.size(); i++) {
        int encryptedValue = static_cast<int>(pow(a[i], e)) % mod;
        cout << encryptedValue << " ";
    }
    cout << endl;

    return 0;
}
